{"ast":null,"code":"var _jsxFileName = \"/home/hp/taskList/src/components/TodoList/TodoList.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport TodoFooter from '../TodoFooter/TodoFooter';\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList({\n  todos,\n  setTodos,\n  setChange\n}) {\n  // const [numberOfIncompleteTasks,settasts]= usestate(0);\n  //numberOfIncompleteTasks.current=0;\n  //const numberOfTasks = useRef(0);\n  //const [change,set]\n  // useEffect(() => {\n  //     numberOfTasks.current= numberOfTasks.current+change;\n  //   });\n  const updateTask = id => {\n    let updatedTasks = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n        if (todo.completed) setChange(-1);else setChange(1);\n        return todo;\n      } else {\n        return todo;\n      }\n    });\n    setTodos(updatedTasks);\n  }; // const calcNumberOfIncompletedTasks = () => {\n  //     let count = 0;\n  //     todos.forEach(todo => {\n  //         if(!todo.completed) count++\n  //     })\n  //     return count\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-item ${todo.completed && \"todo-item-active\"}`,\n          onClick: () => updateTask(todo.id),\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/hp/taskList/src/components/TodoList/TodoList.js"],"names":["React","useEffect","useRef","useState","TodoFooter","TodoList","todos","setTodos","setChange","updateTask","id","updatedTasks","map","todo","completed","index","task"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,MAA1B,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,KADc;AACPC,EAAAA,QADO;AACGC,EAAAA;AADH,CAAlB,EAEG;AACA;AACC;AACA;AACA;AACA;AACA;AACA;AAEA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAIC,YAAY,GAAGL,KAAK,CAACM,GAAN,CAAWC,IAAD,IAAU;AACnC,UAAGA,IAAI,CAACH,EAAL,KAAYA,EAAf,EAAmB;AACfG,QAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AAEA,YAAGD,IAAI,CAACC,SAAR,EACIN,SAAS,CAAC,CAAC,CAAF,CAAT,CADJ,KAGIA,SAAS,CAAC,CAAD,CAAT;AAEJ,eAAOK,IAAP;AACH,OATD,MASO;AACH,eAAOA,IAAP;AACH;AACJ,KAbkB,CAAnB;AAcAN,IAAAA,QAAQ,CAACI,YAAD,CAAR;AACH,GAhBD,CATD,CA2BC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAA,kBAEQL,KAAK,CAACM,GAAN,CAAU,CAACC,IAAD,EAAOE,KAAP,kBACN;AACI,UAAA,SAAS,EAAG,aAAYF,IAAI,CAACC,SAAL,IAAkB,kBAAmB,EADjE;AAEI,UAAA,OAAO,EAAE,MAAML,UAAU,CAACI,IAAI,CAACH,EAAN,CAF7B;AAAA,oBAIKG,IAAI,CAACG;AAJV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;KA7DQX,Q;AA+DT,eAAeA,QAAf","sourcesContent":["import React, {useEffect, useRef,useState,} from 'react'\nimport TodoFooter from '../TodoFooter/TodoFooter'\nimport \"./TodoList.css\"\n\nfunction TodoList({\n    todos, setTodos, setChange\n}) {\n   // const [numberOfIncompleteTasks,settasts]= usestate(0);\n    //numberOfIncompleteTasks.current=0;\n    //const numberOfTasks = useRef(0);\n    //const [change,set]\n    // useEffect(() => {\n    //     numberOfTasks.current= numberOfTasks.current+change;\n    //   });\n\n    const updateTask = (id) => {\n        let updatedTasks = todos.map((todo) => {\n            if(todo.id === id) {\n                todo.completed = !todo.completed;\n\n                if(todo.completed)\n                    setChange(-1);\n                else\n                    setChange(1);\n\n                return todo\n            } else {\n                return todo\n            }\n        });\n        setTodos(updatedTasks)\n    }\n\n    // const calcNumberOfIncompletedTasks = () => {\n    //     let count = 0;\n    //     todos.forEach(todo => {\n    //         if(!todo.completed) count++\n    //     })\n    //     return count\n    // }\n\n    return (\n        <div className=\"todolist-container\">\n            <div className=\"todos-container\">\n                <div>\n                    {\n                        todos.map((todo, index) => (\n                            <div \n                                className={`todo-item ${todo.completed && \"todo-item-active\"}`} \n                                onClick={() => updateTask(todo.id)}\n                            >\n                                {todo.task}\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div>\n                {/* <TodoFooter \n                    numberOfIncompleteTasks={calcNumberOfIncompletedTasks()}\n                /> */}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default TodoList\n"]},"metadata":{},"sourceType":"module"}