{"ast":null,"code":"var _jsxFileName = \"/home/hp/taskList/src/components/AddInput/AddInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport \"./AddInput.css\";\nimport { v4 } from \"uuid\";\nimport TodoList from '../TodoList/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddInput({\n  setTodos,\n  todos\n}) {\n  _s();\n\n  const inputRef = useRef();\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  const [todo, setTodo] = useState(\"\");\n\n  const addTodo = () => {\n    if (todo.trim() == \"\") return;\n    let updatedTodos = [...todos, {\n      id: v4(),\n      task: todo,\n      completed: false\n    }];\n    setTodos(updatedTodos);\n    setTodo(\"\");\n  };\n\n  const changeStyle = () => {\n    inputRef.current.style.width = \"50px\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      value: todo,\n      onChange: e => setTodo(e.target.value),\n      placeholder: \"Add a new task here...\",\n      ref: inputRef,\n      onHover: changeStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-btn\",\n      onClick: changeStyle,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddInput, \"z8x/U7+lRSfm/Tb4nDRcB9pVnr8=\");\n\n_c = AddInput;\nexport default AddInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddInput\");","map":{"version":3,"sources":["/home/hp/taskList/src/components/AddInput/AddInput.js"],"names":["React","useEffect","useState","useRef","v4","TodoList","AddInput","setTodos","todos","inputRef","current","focus","todo","setTodo","addTodo","trim","updatedTodos","id","task","completed","changeStyle","style","width","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAoCC,MAApC,QAAkD,OAAlD;AACA,OAAO,gBAAP;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,QADc;AACJC,EAAAA;AADI,CAAlB,EAEG;AAAA;;AAEC,QAAMC,QAAQ,GAAEN,MAAM,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACD,GAFM,EAEL,EAFK,CAAT;AAIA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,OAAO,GAAG,MAAM;AAClB,QAAGF,IAAI,CAACG,IAAL,MAAa,EAAhB,EAAoB;AACpB,QAAIC,YAAY,GAAG,CACf,GAAGR,KADY,EAEf;AACIS,MAAAA,EAAE,EAAEb,EAAE,EADV;AAEIc,MAAAA,IAAI,EAAEN,IAFV;AAGIO,MAAAA,SAAS,EAAE;AAHf,KAFe,CAAnB;AAQAZ,IAAAA,QAAQ,CAACS,YAAD,CAAR;AACAH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACH,GAZD;;AAaA,QAAMO,WAAW,GAAC,MAAK;AACnBX,IAAAA,QAAQ,CAACC,OAAT,CAAiBW,KAAjB,CAAuBC,KAAvB,GAA8B,MAA9B;AACH,GAFD;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AACI,MAAA,SAAS,EAAC,OADd;AAEI,MAAA,KAAK,EAAEV,IAFX;AAGI,MAAA,QAAQ,EAAGW,CAAD,IAAOV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;AAII,MAAA,WAAW,EAAC,wBAJhB;AAKI,MAAA,GAAG,EAAGhB,QALV;AAMI,MAAA,OAAO,EAAGW;AANd;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AACI,MAAA,SAAS,EAAC,SADd;AAEI,MAAA,OAAO,EAAEA,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA9CQd,Q;;KAAAA,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState,useRef } from 'react'\nimport \"./AddInput.css\"\nimport { v4 } from \"uuid\"\nimport TodoList from '../TodoList/TodoList'\n\nfunction AddInput({\n    setTodos, todos\n}) {\n    \n    const inputRef= useRef();\n\n    useEffect(() => {\n        inputRef.current.focus();\n      },[]);\n\n    const [todo, setTodo] = useState(\"\")\n\n    const addTodo = () => {\n        if(todo.trim()==\"\") return;\n        let updatedTodos = [\n            ...todos,\n            {\n                id: v4(),\n                task: todo,\n                completed: false\n            }\n        ]\n        setTodos(updatedTodos);\n        setTodo(\"\")\n    }\n    const changeStyle=() =>{\n        inputRef.current.style.width= \"50px\" \n    }\n    return (\n        <div className=\"input-container\">\n            <input \n                className=\"input\" \n                value={todo} \n                onChange={(e) => setTodo(e.target.value)}\n                placeholder=\"Add a new task here...\"\n                ref= {inputRef}\n                onHover= {changeStyle}\n            />\n            <button \n                className=\"add-btn\"\n                onClick={changeStyle}\n            >\n                Add\n            </button>\n        </div>\n    )\n}\n\nexport default AddInput"]},"metadata":{},"sourceType":"module"}