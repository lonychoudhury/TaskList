{"ast":null,"code":"var _jsxFileName = \"/home/hp/taskList/src/components/TodoList/TodoList.js\";\nimport React, { useEffect } from 'react';\nimport TodoFooter from '../TodoFooter/TodoFooter';\nimport \"./TodoList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList({\n  todos,\n  setTodos\n}) {\n  const noOfListRenders = useref(0); // useEffect(() => {\n  //     noOfListRenders.current=noOfListRenders.current+1;\n  //   });\n\n  const updateTask = id => {\n    let updatedTasks = todos.map(todo => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n        return todo;\n      } else {\n        return todo;\n      }\n    });\n    setTodos(updatedTasks);\n  };\n\n  const calcNumberOfIncompletedTasks = () => {\n    let count = 0;\n    todos.forEach(todo => {\n      if (!todo.completed) count++;\n    });\n    return count;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todolist-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `todo-item ${todo.completed && \"todo-item-active\"}`,\n          onClick: () => updateTask(todo.id),\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TodoFooter, {\n        numberOfIncompleteTasks: calcNumberOfIncompletedTasks()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/hp/taskList/src/components/TodoList/TodoList.js"],"names":["React","useEffect","TodoFooter","TodoList","todos","setTodos","noOfListRenders","useref","updateTask","id","updatedTasks","map","todo","completed","calcNumberOfIncompletedTasks","count","forEach","index","task"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,CAAkB;AACdC,EAAAA,KADc;AACPC,EAAAA;AADO,CAAlB,EAEG;AACC,QAAMC,eAAe,GAAEC,MAAM,CAAC,CAAD,CAA7B,CADD,CAGC;AACA;AACA;;AACA,QAAMC,UAAU,GAAIC,EAAD,IAAQ;AACvB,QAAIC,YAAY,GAAGN,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAU;AACnC,UAAGA,IAAI,CAACH,EAAL,KAAYA,EAAf,EAAmB;AACfG,QAAAA,IAAI,CAACC,SAAL,GAAiB,CAACD,IAAI,CAACC,SAAvB;AACA,eAAOD,IAAP;AACH,OAHD,MAGO;AACH,eAAOA,IAAP;AACH;AACJ,KAPkB,CAAnB;AAQAP,IAAAA,QAAQ,CAACK,YAAD,CAAR;AACH,GAVD;;AAYA,QAAMI,4BAA4B,GAAG,MAAM;AACvC,QAAIC,KAAK,GAAG,CAAZ;AACAX,IAAAA,KAAK,CAACY,OAAN,CAAcJ,IAAI,IAAI;AAClB,UAAG,CAACA,IAAI,CAACC,SAAT,EAAoBE,KAAK;AAC5B,KAFD;AAGA,WAAOA,KAAP;AACH,GAND;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACI;AAAA,kBAEQX,KAAK,CAACO,GAAN,CAAU,CAACC,IAAD,EAAOK,KAAP,kBACN;AACI,UAAA,SAAS,EAAG,aAAYL,IAAI,CAACC,SAAL,IAAkB,kBAAmB,EADjE;AAEI,UAAA,OAAO,EAAE,MAAML,UAAU,CAACI,IAAI,CAACH,EAAN,CAF7B;AAAA,oBAIKG,IAAI,CAACM;AAJV;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI;AAAA,6BACI,QAAC,UAAD;AACI,QAAA,uBAAuB,EAAEJ,4BAA4B;AADzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;KAnDQX,Q;AAqDT,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport TodoFooter from '../TodoFooter/TodoFooter'\nimport \"./TodoList.css\"\n\nfunction TodoList({\n    todos, setTodos\n}) {\n    const noOfListRenders= useref(0);\n\n    // useEffect(() => {\n    //     noOfListRenders.current=noOfListRenders.current+1;\n    //   });\n    const updateTask = (id) => {\n        let updatedTasks = todos.map((todo) => {\n            if(todo.id === id) {\n                todo.completed = !todo.completed;\n                return todo\n            } else {\n                return todo\n            }\n        });\n        setTodos(updatedTasks)\n    }\n\n    const calcNumberOfIncompletedTasks = () => {\n        let count = 0;\n        todos.forEach(todo => {\n            if(!todo.completed) count++\n        })\n        return count\n    }\n\n    return (\n        <div className=\"todolist-container\">\n            <div className=\"todos-container\">\n                <div>\n                    {\n                        todos.map((todo, index) => (\n                            <div \n                                className={`todo-item ${todo.completed && \"todo-item-active\"}`} \n                                onClick={() => updateTask(todo.id)}\n                            >\n                                {todo.task}\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n            <div>\n                <TodoFooter \n                    numberOfIncompleteTasks={calcNumberOfIncompletedTasks()}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default TodoList"]},"metadata":{},"sourceType":"module"}